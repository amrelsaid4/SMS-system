/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sms.project;

import java.sql.*;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Karim Ashraf
 *
 */
public class Students extends javax.swing.JFrame {

    static String url = "jdbc:mysql://localhost:3306/maindb";
    static String username = "root";
    static String password = "root";
    int counter = 0;

    /**
     * Creates new form Students
     */
    public Students() {
        initComponents();
        updateValues();
        updateValues();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        arrowBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        arabic = new javax.swing.JTextField();
        english = new javax.swing.JTextField();
        level = new javax.swing.JTextField();
        physics = new javax.swing.JTextField();
        math = new javax.swing.JTextField();
        computer = new javax.swing.JTextField();
        french = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        add = new javax.swing.JButton();
        remove = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        id = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(850, 540));

        arrowBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sms/project/images/backarrow.png"))); // NOI18N
        arrowBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                arrowBackMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Name");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Arabic");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("English");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Level");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Computer");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("French");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Math");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Physics");

        name.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        arabic.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        english.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        level.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        physics.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        math.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        computer.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        french.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Arabic", "English", "French", "Math", "Physics", "Computer", "Total", "level"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
            jTable1.getColumnModel().getColumn(7).setResizable(false);
            jTable1.getColumnModel().getColumn(8).setResizable(false);
        }

        add.setText("Add");
        add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addMouseClicked(evt);
            }
        });

        remove.setText("Remove");
        remove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeMouseClicked(evt);
            }
        });

        edit.setText("Edit");
        edit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editMouseClicked(evt);
            }
        });

        searchBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        searchBtn.setText("SEARCH");
        searchBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchBtnMouseClicked(evt);
            }
        });

        id.setText("ID");
        id.setToolTipText("");
        id.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                idFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                idFocusLost(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(arabic, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(english, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(arrowBack)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(add, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(searchBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(edit))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(level, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(remove))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(physics, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(math, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(computer, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                                    .addComponent(french))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(add)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(edit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(remove)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(computer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(math, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(french, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(arrowBack, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(searchBtn, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(level, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(arabic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(physics, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7))
                            .addComponent(english, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void arrowBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_arrowBackMouseClicked
        // TODO add your handling code here:
        MainFrame main = new MainFrame();
        main.setResizable(false);
        main.setLocationRelativeTo(null);
        main.setVisible(true);
        dispose();
    }//GEN-LAST:event_arrowBackMouseClicked

    private void searchBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchBtnMouseClicked
        try {
            // TODO add your handling code here:
            search_Student search = null;
            if (!"ID".equals(id.getText())) {
                if (Integer.parseInt(id.getText()) <= counter) {
                    search = new search_Student(Integer.parseInt(id.getText()));
                } else {
                    JOptionPane.showMessageDialog(this, "Enter Valid ID");
                    return;
                }
            } else {
                search = new search_Student(1);
            }
            search.setSize(new java.awt.Dimension(760, 250));
            search.setResizable(false);
            search.setLocationRelativeTo(null);
            search.setVisible(true);
            // the rest for searching
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "no ID inserted try again!!");
        }
    }//GEN-LAST:event_searchBtnMouseClicked

    private void addMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseClicked
        // TODO add your handling code here:
        String nameValue = name.getText();
        if ("".equals(nameValue)) {
            nameValue = "unknown";
        }
        String levelValue = level.getText();
        int arabicValue, englishValue, frenchValue, mathValue, physicsValue, computerValue;
        try {
            arabicValue = Integer.parseInt(arabic.getText());
        } catch (NumberFormatException e) {
            arabicValue = 0;
        }

        try {
            englishValue = Integer.parseInt(english.getText());
        } catch (NumberFormatException e) {
            englishValue = 0;
        }

        try {
            frenchValue = Integer.parseInt(french.getText());
        } catch (NumberFormatException e) {
            frenchValue = 0;
        }

        try {
            mathValue = Integer.parseInt(math.getText());
        } catch (NumberFormatException e) {
            mathValue = 0;
        }

        try {
            physicsValue = Integer.parseInt(physics.getText());
        } catch (NumberFormatException e) {
            physicsValue = 0;
        }

        try {
            computerValue = Integer.parseInt(computer.getText());
        } catch (NumberFormatException e) {
            computerValue = 0;
        }

        Set<String> validLevels = Set.of("first", "second", "third", "fourth");
        if (!validLevels.contains(levelValue.toLowerCase())) {
            levelValue = "first"; // Assign default level
        }
        try (Connection connection = DriverManager.getConnection(url, username, password); PreparedStatement statement = connection.prepareStatement("INSERT INTO student (name, arabic, english,french,math,physics,computer,level) VALUES (?, ?, ?,?,?, ?, ?,?)")) {
            statement.setString(1, nameValue);
            statement.setInt(2, arabicValue);
            statement.setInt(3, englishValue);
            statement.setInt(4, frenchValue);
            statement.setInt(5, mathValue);
            statement.setInt(6, physicsValue);
            statement.setInt(7, computerValue);
            statement.setString(8, levelValue);
            int rowsAffected = statement.executeUpdate();
            if (rowsAffected == 1) {
                System.out.println("Data inserted successfully!");
            } else {
                JOptionPane.showMessageDialog(this, "Error inserting data.");
            }
            updateValues();
            updateValues();
        } catch (SQLException e) {
            System.out.println("Connection failed");
        }
    }//GEN-LAST:event_addMouseClicked

    private void editMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editMouseClicked
        // TODO add your handling code here:
        String nameValue = name.getText();
        if ("".equals(nameValue)) {
            nameValue = "unknown";
        }
        String levelValue = level.getText();
        int arabicValue, englishValue, frenchValue, mathValue, physicsValue, computerValue;
        try {
            arabicValue = Integer.parseInt(arabic.getText());
        } catch (NumberFormatException e) {
            arabicValue = 0;
        }

        try {
            englishValue = Integer.parseInt(english.getText());
        } catch (NumberFormatException e) {
            englishValue = 0;
        }

        try {
            frenchValue = Integer.parseInt(french.getText());
        } catch (NumberFormatException e) {
            frenchValue = 0;
        }

        try {
            mathValue = Integer.parseInt(math.getText());
        } catch (NumberFormatException e) {
            mathValue = 0;
        }

        try {
            physicsValue = Integer.parseInt(physics.getText());
        } catch (NumberFormatException e) {
            physicsValue = 0;
        }

        try {
            computerValue = Integer.parseInt(computer.getText());
        } catch (NumberFormatException e) {
            computerValue = 0;
        }

        Set<String> validLevels = Set.of("first", "second", "third", "fourth");
        if (!validLevels.contains(levelValue.toLowerCase())) {
            levelValue = "first"; // Assign default level
        }
        int idValue = 0;
        if (!"ID".equals(id.getText())) {
            if (Integer.parseInt(id.getText()) <= counter) {
                idValue = Integer.parseInt(id.getText());
            } else {
                JOptionPane.showMessageDialog(this, "Enter Valid ID");
                return;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Enter Valid ID");
            return;
        }
        try (Connection connection = DriverManager.getConnection(url, username, password); PreparedStatement statement = connection.prepareStatement("UPDATE student SET name = ?,arabic = ?,english = ?,french = ?,math = ?, physics = ?, computer = ?,level = ? WHERE id = ?")) {
            statement.setString(1, nameValue);
            statement.setInt(2, arabicValue);
            statement.setInt(3, englishValue);
            statement.setInt(4, frenchValue);
            statement.setInt(5, mathValue);
            statement.setInt(6, physicsValue);
            statement.setInt(7, computerValue);
            statement.setString(8, levelValue);
            statement.setInt(9, idValue);
            int rowsAffected = statement.executeUpdate();
            if (rowsAffected == 1) {
                JOptionPane.showMessageDialog(this, "Multiple values updated successfully!");
            } else {
                JOptionPane.showMessageDialog(this, "Error updating data.");
            }
            updateValues();
            updateValues();
        } catch (SQLException e) {
        }
    }//GEN-LAST:event_editMouseClicked

    private void removeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeMouseClicked
        // TODO add your handling code here:
        try (Connection connection = DriverManager.getConnection(url, username, password); PreparedStatement statement = connection.prepareStatement("DELETE FROM student WHERE id = ?")) {
            int idValue = 0;
            if (!"ID".equals(id.getText())) {
                if (Integer.parseInt(id.getText()) <= counter) {
                    idValue = Integer.parseInt(id.getText());
                } else {
                    JOptionPane.showMessageDialog(this, "Enter Valid ID");
                    return;
                }
            } else {
                JOptionPane.showMessageDialog(this, "Enter Valid ID");
                return;
            }
            statement.setInt(1, idValue); // Set the ID for the WHERE clause
            int rowsAffected = statement.executeUpdate();
            if (rowsAffected == 1) {
                System.out.println("Data deleted successfully!");
            } else {
                JOptionPane.showMessageDialog(this, "Error deleting data.");
            }
            updateValues();
            updateValues();
        } catch (SQLException e) {
        }
    }//GEN-LAST:event_removeMouseClicked

    private void idFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idFocusGained
        // TODO add your handling code here:
        if ("ID".equals(id.getText())) {
            id.setText("");
        }
    }//GEN-LAST:event_idFocusGained

    private void idFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idFocusLost
        // TODO add your handling code here:
        if ("".equals(id.getText())) {
            id.setText("ID");
        }
    }//GEN-LAST:event_idFocusLost

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        id.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        name.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        arabic.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
        english.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
        french.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
        math.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString());
        physics.setText(jTable1.getValueAt(jTable1.getSelectedRow(),6).toString());
        computer.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 7).toString());
        level.setText(jTable1.getValueAt(jTable1.getSelectedRow(),9).toString());
    }//GEN-LAST:event_jTable1MouseClicked
    private void updateValues() {
        counter = 0;
        int idValue = 0;
        String nameValue = "";
        String levelValue = "";
        int arabicValue = 0;
        int englishValue = 0;
        int frenchValue = 0;
        int physicsValue = 0;
        int mathValue = 0;
        int computerValue = 0;
        int total = 0;
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        try (Connection connection = DriverManager.getConnection(url, username, password); Statement statement = connection.createStatement()) {
            ResultSet res = statement.executeQuery("select * from student");
            // res => row row row
            // res 0
            while (res.next()) {
                idValue = res.getInt("id");
                nameValue = res.getString("name");
                levelValue = res.getString("level");
                arabicValue = res.getInt("arabic");
                englishValue = res.getInt("english");
                frenchValue = res.getInt("french");
                physicsValue = res.getInt("physics");
                mathValue = res.getInt("math");
                computerValue = res.getInt("computer");
                total = res.getInt("total");
                model.addRow(new Object[]{idValue, nameValue, arabicValue, englishValue, frenchValue, mathValue, physicsValue, computerValue, total, levelValue});
                counter++;
            }
            statement.execute("SET foreign_key_checks = 0");
            // update the id after deletion or adding
            statement.executeUpdate("SET @new_id := 0");
            statement.executeUpdate("UPDATE student SET id = @new_id := @new_id + 1");
            statement.execute("SET foreign_key_checks = 1");
            statement.close();
            connection.close();
        } catch (SQLException e) {
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Students.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Students().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTextField arabic;
    private javax.swing.JButton arrowBack;
    private javax.swing.JTextField computer;
    private javax.swing.JButton edit;
    private javax.swing.JTextField english;
    private javax.swing.JTextField french;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField level;
    private javax.swing.JTextField math;
    private javax.swing.JTextField name;
    private javax.swing.JTextField physics;
    private javax.swing.JButton remove;
    private javax.swing.JButton searchBtn;
    // End of variables declaration//GEN-END:variables
}
